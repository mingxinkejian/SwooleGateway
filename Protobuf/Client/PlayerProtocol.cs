// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerProtocol.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Logic.Protocol {

  /// <summary>Holder for reflection information generated from PlayerProtocol.proto</summary>
  public static partial class PlayerProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQbGF5ZXJQcm90b2NvbC5wcm90bxIOTG9naWMuUHJvdG9jb2wifwoKUGxh",
            "eWVySW5mbxILCgN1SWQYASABKA0SOAoPcGxheWVyQmFzaWNJbmZvGAIgASgL",
            "Mh8uTG9naWMuUHJvdG9jb2wuUGxheWVyQmFzaWNJbmZvEioKBXN0YXRlGAMg",
            "ASgOMhsuTG9naWMuUHJvdG9jb2wuUGxheWVyU3RhdGUigwEKD1BsYXllckJh",
            "c2ljSW5mbxIMCgRuYW1lGAEgASgMEioKBXN0YXRlGAIgASgOMhsuTG9naWMu",
            "UHJvdG9jb2wuUGxheWVyU3RhdGUSCwoDc2V4GAMgASgNEhIKCnJlZ2lzdFRp",
            "bWUYBCABKAQSFQoNbGFzdExvZ2luVGltZRgFIAEoBCpsCgtQbGF5ZXJTdGF0",
            "ZRIXChNQTEFZRVJfU1RBVEVfTk9STUFMEAASFwoTUExBWUVSX1NUQVRFX0ZP",
            "UkJJRBABEhQKEFBMQVlFUl9TVEFURV9CQU4QAhIVChFQTEFZRVJfU1RBVEVf",
            "SU5JVBADYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Logic.Protocol.PlayerState), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Protocol.PlayerInfo), global::Logic.Protocol.PlayerInfo.Parser, new[]{ "UId", "PlayerBasicInfo", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Protocol.PlayerBasicInfo), global::Logic.Protocol.PlayerBasicInfo.Parser, new[]{ "Name", "State", "Sex", "RegistTime", "LastLoginTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PlayerState {
    /// <summary>
    ///正常
    /// </summary>
    [pbr::OriginalName("PLAYER_STATE_NORMAL")] Normal = 0,
    /// <summary>
    ///限制
    /// </summary>
    [pbr::OriginalName("PLAYER_STATE_FORBID")] Forbid = 1,
    /// <summary>
    ///封停
    /// </summary>
    [pbr::OriginalName("PLAYER_STATE_BAN")] Ban = 2,
    /// <summary>
    ///初始
    /// </summary>
    [pbr::OriginalName("PLAYER_STATE_INIT")] Init = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  ///玩家信息
  /// </summary>
  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Protocol.PlayerProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      uId_ = other.uId_;
      PlayerBasicInfo = other.playerBasicInfo_ != null ? other.PlayerBasicInfo.Clone() : null;
      state_ = other.state_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "uId" field.</summary>
    public const int UIdFieldNumber = 1;
    private uint uId_;
    /// <summary>
    ///uId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UId {
      get { return uId_; }
      set {
        uId_ = value;
      }
    }

    /// <summary>Field number for the "playerBasicInfo" field.</summary>
    public const int PlayerBasicInfoFieldNumber = 2;
    private global::Logic.Protocol.PlayerBasicInfo playerBasicInfo_;
    /// <summary>
    ///基本信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Protocol.PlayerBasicInfo PlayerBasicInfo {
      get { return playerBasicInfo_; }
      set {
        playerBasicInfo_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Logic.Protocol.PlayerState state_ = 0;
    /// <summary>
    ///状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Protocol.PlayerState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UId != other.UId) return false;
      if (!object.Equals(PlayerBasicInfo, other.PlayerBasicInfo)) return false;
      if (State != other.State) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UId != 0) hash ^= UId.GetHashCode();
      if (playerBasicInfo_ != null) hash ^= PlayerBasicInfo.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(UId);
      }
      if (playerBasicInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerBasicInfo);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UId);
      }
      if (playerBasicInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerBasicInfo);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.UId != 0) {
        UId = other.UId;
      }
      if (other.playerBasicInfo_ != null) {
        if (playerBasicInfo_ == null) {
          playerBasicInfo_ = new global::Logic.Protocol.PlayerBasicInfo();
        }
        PlayerBasicInfo.MergeFrom(other.PlayerBasicInfo);
      }
      if (other.State != 0) {
        State = other.State;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (playerBasicInfo_ == null) {
              playerBasicInfo_ = new global::Logic.Protocol.PlayerBasicInfo();
            }
            input.ReadMessage(playerBasicInfo_);
            break;
          }
          case 24: {
            state_ = (global::Logic.Protocol.PlayerState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家基本信息
  /// </summary>
  public sealed partial class PlayerBasicInfo : pb::IMessage<PlayerBasicInfo> {
    private static readonly pb::MessageParser<PlayerBasicInfo> _parser = new pb::MessageParser<PlayerBasicInfo>(() => new PlayerBasicInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerBasicInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Protocol.PlayerProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBasicInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBasicInfo(PlayerBasicInfo other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      sex_ = other.sex_;
      registTime_ = other.registTime_;
      lastLoginTime_ = other.lastLoginTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBasicInfo Clone() {
      return new PlayerBasicInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    /// <summary>
    ///昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Logic.Protocol.PlayerState state_ = 0;
    /// <summary>
    ///状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Protocol.PlayerState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 3;
    private uint sex_;
    /// <summary>
    ///性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "registTime" field.</summary>
    public const int RegistTimeFieldNumber = 4;
    private ulong registTime_;
    /// <summary>
    ///注册时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RegistTime {
      get { return registTime_; }
      set {
        registTime_ = value;
      }
    }

    /// <summary>Field number for the "lastLoginTime" field.</summary>
    public const int LastLoginTimeFieldNumber = 5;
    private ulong lastLoginTime_;
    /// <summary>
    ///上次登陆时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LastLoginTime {
      get { return lastLoginTime_; }
      set {
        lastLoginTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerBasicInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerBasicInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (Sex != other.Sex) return false;
      if (RegistTime != other.RegistTime) return false;
      if (LastLoginTime != other.LastLoginTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (RegistTime != 0UL) hash ^= RegistTime.GetHashCode();
      if (LastLoginTime != 0UL) hash ^= LastLoginTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (Sex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Sex);
      }
      if (RegistTime != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(RegistTime);
      }
      if (LastLoginTime != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(LastLoginTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sex);
      }
      if (RegistTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RegistTime);
      }
      if (LastLoginTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastLoginTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerBasicInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.RegistTime != 0UL) {
        RegistTime = other.RegistTime;
      }
      if (other.LastLoginTime != 0UL) {
        LastLoginTime = other.LastLoginTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 16: {
            state_ = (global::Logic.Protocol.PlayerState) input.ReadEnum();
            break;
          }
          case 24: {
            Sex = input.ReadUInt32();
            break;
          }
          case 32: {
            RegistTime = input.ReadUInt64();
            break;
          }
          case 40: {
            LastLoginTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
